class Solution {
    public boolean isThree(int n) {
        // for a number to have 3 divisiors it must be a perfect square & the perfect squareroot must be a prime number

      int root = (int)Math.sqrt(n);
       if (root * root != n) {
            return false;
        }
                return isPrime(root);
    }

      private boolean isPrime(int num) {
        if (num <= 1) return false;
        if (num <= 3) return true;
        if (num % 2 == 0 || num % 3 == 0) return false;

        for (int i = 5; i * i <= num; i += 6) {
            if (num % i == 0 || num % (i + 2) == 0) {
                return false;
            }
        }
        return true;
    }
}
